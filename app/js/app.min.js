function Player(i){this.pokemon=i,this.pokemonSkills=[]}function Pokemon(i,t,a){this.name=i,this.health=t,this.magic={maxMagic:a,currentMagic:a},this.skills={}}function AttackSkill(i,t,a){this.attackName=i,this.damage=t,this.magicNeeded=a}function gameOver(){}function reset(){}Player.prototype.skillsToArray=function(){for(key in this.pokemon.skills)this.pokemonSkills.push(key)},Pokemon.prototype.learnAttackSkill=function(i){this.skills[i.attackName]=i},Pokemon.prototype.attack=function(i,t){this.magic<this.skills[i].magicNeeded?console.log("not enough Magic!!!!"):(t.health-=this.skills[i].damage,this.magic.currentMagic-=this.skills[i].magicNeeded,console.log(this.name+" launched skill "+i+" successfully!"),console.log(t.name+" received "+this.skills[i].damage+" damage"),t.health<0&&(t.health=0))},Pokemon.prototype.showStatus=function(){console.log(this.name+" status"),console.log("health: "+this.health),console.log("magic: "+this.magic.currentMagic)},Pokemon.prototype.getMagic=function(){var i=Math.round(.1*this.magic.maxMagic);console.log("current",this.magic.currentMagic),this.magic.currentMagic+=i,this.magic.currentMagic>this.magic.maxMagic&&(this.magic.currentMagic=this.magic.maxMagic)};