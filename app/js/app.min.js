function Player(t){this.pokemon=t,this.pokemonSkills=[]}function Pokemon(t,i,e,a){this.name=t,this.health={maxHealth:i,currentHealth:i},this.magic={maxMagic:e,currentMagic:e},this.image=a,this.skills={}}function AttackSkill(t,i,e){this.attackName=t,this.damage=i,this.magicNeeded=e}function gameOver(){}function reset(){}Player.prototype.skillsToArray=function(){for(key in this.pokemon.skills)this.pokemonSkills.push(key)},Pokemon.prototype.learnAttackSkill=function(t){this.skills[t.attackName]=t},Pokemon.prototype.attack=function(t,i){this.magic<this.skills[t].magicNeeded?console.log("not enough Magic!!!!"):(i.health.currentHealth-=this.skills[t].damage,this.magic.currentMagic-=this.skills[t].magicNeeded,console.log(this.name+" launched skill "+t+" successfully!"),console.log(i.name+" received "+this.skills[t].damage+" damage"),i.health.currentHealth<0&&(i.health.currentMagic=0))},Pokemon.prototype.showStatus=function(){console.log(this.name+" status"),console.log("health: "+this.health),console.log("magic: "+this.magic.currentMagic)},Pokemon.prototype.getMagic=function(){var t=Math.round(.1*this.magic.maxMagic);this.magic.currentMagic+=t,this.magic.currentMagic>this.magic.maxMagic&&(this.magic.currentMagic=this.magic.maxMagic),console.log("current",this.magic.currentMagic)};